{"version":3,"sources":["components/Navbar.js","actions/index.js","components/ProductItem.js","components/Products.js","config/notification.js","components/AddProduct.js","components/SingleProduct.js","components/CartItem.js","components/Cart.js","App.js","reducers/index.js","store/index.js","reportWebVitals.js","index.js"],"names":["Navbar","calculateTotalCount","items","props","cart","total","qty","className","to","src","alt","this","React","Component","connectedAppComponent","connect","state","withRouter","ADD_PRODUCTS","ADD_PRODUCT_TO_CART","INCREASE_QTY_ITEM_CART","DECREASE_QTY_ITEM_CART","DELETE_ITEM_CART","addProductToCart","item","type","ProductItem","addToCart","dispatch","product","onClick","event","target","history","push","id","img","style","fontSize","title","color","marginTop","price","rating","products","Products","listToRender","length","map","showNotification","text","noty","layout","theme","timeout","show","AddProduct","addNewProduct","newProduct","nameRef","current","value","description","desRef","priceRef","ratingRef","imageRef","db","collection","add","then","docRef","get","snapshot","console","log","data","catch","error","createRef","firebase","firestore","ref","SingleProduct","URLSearchParams","window","location","search","ind","findIndex","element","margin","display","CartItem","Cart","iterator","totalPrice","calculateTotal","App","componentDidMount","orderBy","onSnapshot","docs","doc","exact","path","render","component","initialProductsState","initialCartState","combineReducers","action","index","newState","filteredItems","filter","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createdStore","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e3101630.chunk.js","sourcesContent":["/** @format */\r\n\r\nimport React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Navbar extends React.Component {\r\n  // Calculate total number of items in cart.\r\n  calculateTotalCount = () => {\r\n    const { items } = this.props.cart;\r\n    let total = 0;\r\n    for (const iterator of items) {\r\n      total += iterator.qty;\r\n    }\r\n    return total;\r\n  };\r\n\r\n  // Render navbar.\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <Link className=\"logo-link\" to=\"/ecommerce-website/\">\r\n          <img\r\n            className=\"logo\"\r\n            src=\"https://thepixelcode.com/oamtoast/2019/10/99.jpg\"\r\n            alt=\"Logo\"></img>\r\n        </Link>\r\n        <div className=\"tabs\">\r\n          <Link to=\"/ecommerce-website/\">\r\n            <button className=\"nav-button\">Home</button>\r\n          </Link>\r\n\r\n          <Link to=\"/ecommerce-website/add-product\">\r\n            <button className=\"nav-button\">Add Product</button>\r\n          </Link>\r\n        </div>\r\n        <Link className=\"cart-icon-link\" to=\"/ecommerce-website/cart\">\r\n          <div className=\"cart-icon-container\">\r\n            <img\r\n              className=\"cart-icon\"\r\n              src=\"https://cdn3.iconfinder.com/data/icons/e-commerce-2-1/256/1-512.png\"\r\n              alt=\"cartIcon\"></img>\r\n            <span className=\"cart-count\">{this.calculateTotalCount()}</span>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cart: state.cart,\r\n  };\r\n}\r\n\r\nconst connectedAppComponent = connect(mapStateToProps)(Navbar);\r\nexport default withRouter(connectedAppComponent);\r\n","/** @format */\r\n\r\n// Action Types\r\nexport const ADD_PRODUCTS = \"ADD_PRODUCTS\";\r\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\";\r\nexport const INCREASE_QTY_ITEM_CART = \"INCREASE_QTY_ITEM_CART\";\r\nexport const DECREASE_QTY_ITEM_CART = \"DECREASE_QTY_ITEM_CART\";\r\nexport const DELETE_ITEM_CART = \"DELETE_ITEM_CART\";\r\n\r\n// Action Creators for products\r\n\r\n// Add multple products to cart\r\nexport function addProducts(items) {\r\n  return {\r\n    type: ADD_PRODUCTS,\r\n    items,\r\n  };\r\n}\r\n\r\n// Action creators in cart\r\n// Add products to cart\r\n\r\nexport function addProductToCart(item) {\r\n  return {\r\n    type: ADD_PRODUCT_TO_CART,\r\n    item,\r\n  };\r\n}\r\n\r\n// Increase quantity of cart of an item\r\nexport function increaseQtyItemOfCart(item) {\r\n  return {\r\n    type: INCREASE_QTY_ITEM_CART,\r\n    item,\r\n  };\r\n}\r\n\r\n// decrese quantity of cart of an item\r\nexport function decreaseQtyItemOfCart(item) {\r\n  return {\r\n    type: DECREASE_QTY_ITEM_CART,\r\n    item,\r\n  };\r\n}\r\n\r\n// delete item of cart\r\nexport function deleteItemOfCart(item) {\r\n  return {\r\n    type: DELETE_ITEM_CART,\r\n    item,\r\n  };\r\n}\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addProductToCart } from \"../actions/index\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ProductItem extends React.Component {\r\n  // Add an item to cart, dispatch action.\r\n  addToCart = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch(addProductToCart(this.props.product));\r\n  };\r\n\r\n  // Render function.\r\n  render() {\r\n    const { product } = this.props;\r\n    return (\r\n      <div\r\n        onClick={(event) => {\r\n          if (event.target.className === \"action-icons-addcart\") {\r\n            return;\r\n          }\r\n          this.props.history.push(\r\n            \"/ecommerce-website/product?id=\" + product.id,\r\n          );\r\n        }}\r\n        className=\"product-item\"\r\n        id={\"item\" + product.id}>\r\n        <div className=\"left-block-products\">\r\n          <img className=\"product-item-img\" src={product.img} alt=\"product\" />\r\n        </div>\r\n\r\n        <div className=\"end-block-products\">\r\n          <div className=\"end-block-products-detials\">\r\n            <div style={{ fontSize: 17 }}>{product.title}</div>\r\n            <div style={{ fontSize: 14, color: \"black\", marginTop: 5 }}>\r\n              Rs. {product.price}\r\n            </div>\r\n            <div style={{ fontSize: 15, color: \"#black\", marginTop: 5 }}>\r\n              Rating : {product.rating}\r\n            </div>\r\n          </div>\r\n          <div className=\"products-actions\">\r\n            <img\r\n              className=\"action-icons-addcart\"\r\n              src=\"https://icon-library.com/images/add-to-cart-icon/add-to-cart-icon-4.jpg\"\r\n              alt=\"Edit\"\r\n              onClick={this.addToCart}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    products: state.products,\r\n    cart: state.cart,\r\n  };\r\n}\r\n\r\nconst connectedAppComponent = connect(mapStateToProps)(ProductItem);\r\nexport default withRouter(connectedAppComponent);\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport ProductItem from \"./ProductItem\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Products extends React.Component {\r\n  render() {\r\n    const { items } = this.props.products;\r\n\r\n    const listToRender = items;\r\n\r\n    return (\r\n      <div className=\"products\">\r\n        {listToRender.length > 0 ? (\r\n          listToRender.map((item) => {\r\n            return <ProductItem product={item} key={item.id} />;\r\n          })\r\n        ) : (\r\n          <h1>No Products to show</h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    products: state.products,\r\n  };\r\n}\r\n\r\nconst connectedAppComponent = connect(mapStateToProps)(Products);\r\nexport default connectedAppComponent;\r\n","/** @format */\r\n\r\nimport noty from \"noty\";\r\n\r\nconst showNotification = (text) => {\r\n  new noty({\r\n    text: text,\r\n    layout: \"topRight\",\r\n    theme: \"sunset\",\r\n    type: \"alert\",\r\n    timeout: 500,\r\n  }).show();\r\n};\r\n\r\nexport { showNotification };\r\n","/** @format */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { showNotification } from \"../config/notification\";\r\nimport firebase from \"firebase\";\r\n\r\nclass AddProduct extends Component {\r\n  constructor() {\r\n    super();\r\n    this.nameRef = React.createRef();\r\n    this.desRef = React.createRef();\r\n    this.priceRef = React.createRef();\r\n    this.ratingRef = React.createRef();\r\n    this.imageRef = React.createRef();\r\n    this.db = firebase.firestore();\r\n  }\r\n\r\n  // Handle adding a new product to firebase\r\n  addNewProduct = () => {\r\n    const newProduct = {};\r\n    newProduct.title = this.nameRef.current.value;\r\n    newProduct.description = this.desRef.current.value;\r\n    newProduct.price = this.priceRef.current.value;\r\n    newProduct.rating = this.ratingRef.current.value;\r\n    newProduct.img = this.imageRef.current.value;\r\n    if (\r\n      newProduct.title === \"\" ||\r\n      newProduct.description === \"\" ||\r\n      newProduct.price === \"\" ||\r\n      newProduct.rating === \"\" ||\r\n      newProduct.img === \"\"\r\n    ) {\r\n      showNotification(\"No field can be blank\");\r\n      return;\r\n    }\r\n    this.db\r\n      .collection(\"products\")\r\n      .add(newProduct)\r\n      .then((docRef) => {\r\n        docRef.get().then((snapshot) => {\r\n          console.log(\"Product has been added\", snapshot.data());\r\n          showNotification(\"Product has been added\");\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    // console.log(\"newProduc\", newProduct);\r\n    this.props.history.push(\r\n      \"/ecommerce-website/#item\" + (this.props.products.items.length + 1),\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"add-prod-div\">\r\n        <h2>Add a Product</h2>\r\n        <div className=\"form-add-prod\">\r\n          <div className=\"form-add-prod-input-case\">\r\n            <label>Name</label>\r\n            <input type=\"text\" id=\"name\" ref={this.nameRef}></input>\r\n          </div>\r\n          <div className=\"form-add-prod-input-case\">\r\n            <label>Description</label>\r\n            <input type=\"text\" id=\"description\" ref={this.desRef}></input>\r\n          </div>\r\n          <div className=\"form-add-prod-input-case\">\r\n            <label>Price</label>\r\n            <input type=\"text\" id=\"price\" ref={this.priceRef}></input>\r\n          </div>\r\n          <div className=\"form-add-prod-input-case\">\r\n            <label>Rating</label>\r\n            <input type=\"text\" id=\"rating\" ref={this.ratingRef}></input>\r\n          </div>\r\n          <div className=\"form-add-prod-input-case\">\r\n            <label>Image Link</label>\r\n            <input type=\"text\" id=\"img\" ref={this.imageRef}></input>\r\n          </div>\r\n          <button\r\n            className=\"action-button\"\r\n            onClick={() => this.addNewProduct()}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    products: state.products,\r\n  };\r\n}\r\n\r\nconst connectedAppComponent = connect(mapStateToProps)(AddProduct);\r\nexport default connectedAppComponent;\r\n","/** @format */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addProductToCart } from \"../actions\";\r\n\r\nclass SingleProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { products } = this.props;\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const id = urlParams.get(\"id\");\r\n    let ind = products.items.findIndex(function (element) {\r\n      return element.id + \"\" === id;\r\n    });\r\n    this.item = products.items[ind];\r\n  }\r\n\r\n  // Add item to cart and dispatch action\r\n  addToCart = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch(addProductToCart(this.item));\r\n  };\r\n\r\n  render() {\r\n    const item = this.item;\r\n    return (\r\n      <div className=\"single-product\">\r\n        <div className=\"upper-block\">\r\n          <img src={item.img} alt=\"product\"></img>\r\n          <div>\r\n            <div>{item.title}</div>\r\n            <div>Rs. {item.price}</div>\r\n            <div>Rating: {item.rating}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"lower-block\">\r\n          <div>Description: {item.description}</div>\r\n          <button\r\n            style={{ margin: \"auto\", display: \"block\", marginTop: \"10px\" }}\r\n            className=\"action-button\"\r\n            onClick={this.addToCart}>\r\n            Add to Cart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    products: state.products,\r\n  };\r\n}\r\n\r\nconst connectedAppComponent = connect(mapStateToProps)(SingleProduct);\r\nexport default connectedAppComponent;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  increaseQtyItemOfCart,\r\n  decreaseQtyItemOfCart,\r\n  deleteItemOfCart,\r\n} from \"../actions/index\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass CartItem extends React.Component {\r\n  render() {\r\n    const { product, dispatch } = this.props;\r\n\r\n    return (\r\n      <div\r\n        onClick={(event) => {\r\n          if (\r\n            event.target.className === \"action-icons\" ||\r\n            event.target.className === \"action-icons-remove\"\r\n          ) {\r\n            return;\r\n          }\r\n          this.props.history.push(\r\n            \"/ecommerce-website/product?id=\" + product.id,\r\n          );\r\n        }}\r\n        className=\"cart-item\">\r\n        <div className=\"left-block\">\r\n          <img className=\"cart-item-img\" src={product.img} alt=\"product\" />\r\n        </div>\r\n        <div className=\"right-block\">\r\n          <div style={{ fontSize: 15, color: \"black\" }}>{product.title}</div>\r\n          <div style={{ fontSize: 18, color: \"black\", marginTop: 5 }}>\r\n            Rs. {product.price}\r\n          </div>\r\n        </div>\r\n        <div className=\"end-block\">\r\n          <div className=\"cart-item-actions\">\r\n            {/* buttons */}\r\n            <img\r\n              className=\"action-icons\"\r\n              src=\"https://freeiconshop.com/wp-content/uploads/edd/minus-flat.png\"\r\n              alt=\"Decrease\"\r\n              onClick={() => {\r\n                dispatch(decreaseQtyItemOfCart(product)); //Dispatch decrease item from cart\r\n              }}\r\n            />\r\n            <div style={{ fontSize: 17, color: \"black\" }}>\r\n              Qty : {product.qty}\r\n            </div>\r\n            <img\r\n              className=\"action-icons\"\r\n              src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQgSUXmVtzXbJlZLKHjI551t5E5qMbrBu6oxA&usqp=CAU\"\r\n              alt=\"Increase\"\r\n              onClick={() => {\r\n                dispatch(increaseQtyItemOfCart(product)); //Dispatch increase item from cart\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button\r\n            style={{ margin: \"auto\", display: \"block\", marginTop: \"10px\" }}\r\n            className=\"action-icons-remove\"\r\n            onClick={() => {\r\n              dispatch(deleteItemOfCart(product)); //Dispatch delete item from cart\r\n            }}>\r\n            Remove\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cart: state.cart,\r\n  };\r\n}\r\n\r\nconst connectedAppComponent = connect(mapStateToProps)(CartItem);\r\n\r\nexport default withRouter(connectedAppComponent);\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport CartItem from \"./CartItem\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Cart extends React.Component {\r\n  // Calculate total price for cart.\r\n  calculateTotal(items) {\r\n    let price = 0;\r\n    for (const iterator of items) {\r\n      price += iterator.price * iterator.qty;\r\n    }\r\n    return price;\r\n  }\r\n\r\n  render() {\r\n    const { items } = this.props.cart;\r\n    const totalPrice = this.calculateTotal(items);\r\n    return (\r\n      <div className=\"cart-view\">\r\n        <div className=\"cart\">\r\n          {items.map((item) => {\r\n            return <CartItem product={item} key={item.id} />;\r\n          })}\r\n        </div>\r\n\r\n        <div className=\"cart-total\">\r\n          {items.length > 0 ? (\r\n            <div>\r\n              <div>Total Price : {totalPrice}</div>\r\n              <button className=\"cart-checkout-button\">Checkout</button>\r\n            </div>\r\n          ) : (\r\n            <h1>Cart Empty!</h1>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cart: state.cart,\r\n  };\r\n}\r\n\r\nconst connectedAppComponent = connect(mapStateToProps)(Cart);\r\nexport default connectedAppComponent;\r\n","/** @format */\n\nimport React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Products from \"./components/Products\";\nimport AddProduct from \"./components/AddProduct\";\nimport SingleProduct from \"./components/SingleProduct\";\nimport Cart from \"./components/Cart\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addProducts } from \"./actions\";\nimport firebase from \"firebase\";\n\n// Add routing and different routes\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.db = firebase.firestore();\n  }\n  componentDidMount = () => {\n    this.db\n      .collection(\"products\")\n      .orderBy(\"price\", \"asc\")\n      .onSnapshot((snapshot) => {\n        // console.log(snapshot);\n        const products = snapshot.docs.map((doc) => {\n          // console.log(doc.data());\n          const data = doc.data();\n          data[\"id\"] = doc.id;\n          return data;\n        });\n        const { dispatch } = this.props;\n        // console.log(\"products.data int\", products);\n        dispatch(addProducts(products));\n      });\n  };\n\n  \n\n\n  render() {\n       \n    return (\n      <div className=\"App\">\n        <Router>\n          <Navbar />\n          <Route\n            exact\n            path=\"/ecommerce-website/\"\n            render={(props) => <Products {...props} />}\n          />\n          <Route path=\"/ecommerce-website/cart\" component={Cart} />\n          <Route path=\"/ecommerce-website/add-product\" component={AddProduct} />\n          <Route path=\"/ecommerce-website/product\" component={SingleProduct} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    products: state.products,\n    cart: state.cart,\n  };\n}\n\n const connectedAppComponent = connect(mapStateToProps)(App);\nexport default (connectedAppComponent);\n","/** @format */\r\n\r\nimport { combineReducers } from \"redux\";\r\nimport { showNotification } from \"../config/notification\";\r\nimport {\r\n  ADD_PRODUCTS,\r\n  ADD_PRODUCT_TO_CART,\r\n  INCREASE_QTY_ITEM_CART,\r\n  DECREASE_QTY_ITEM_CART,\r\n  DELETE_ITEM_CART,\r\n} from \"../actions/index\";\r\n\r\nconst initialProductsState = {\r\n  items: [],\r\n};\r\n\r\n// Handle products\r\nexport function products(state = initialProductsState, action) {\r\n  switch (action.type) {\r\n    // Add products to cart\r\n    case ADD_PRODUCTS:\r\n      return { ...state, items: action.items };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialCartState = {\r\n  items: [],\r\n};\r\n\r\n// Handle cart\r\nexport function cart(state = initialCartState, action) {\r\n  switch (action.type) {\r\n    //  increase the quantity\r\n    case ADD_PRODUCT_TO_CART:\r\n    case INCREASE_QTY_ITEM_CART: {\r\n      // console.log(state);\r\n      let index = state.items.findIndex(function (element) {\r\n        return element.id === action.item.id;\r\n      });\r\n      if (index === -1) {\r\n        showNotification(\"1 Item added to cart\");\r\n        action.item.qty = 1;\r\n        return { ...state, items: [...state.items, action.item] };\r\n      } else {\r\n        showNotification(\"Quantity increased by 1\");\r\n        const newState = { ...state };\r\n        newState.items[index].qty++;\r\n        return newState;\r\n      }\r\n    }\r\n    //  decrease the quantity\r\n    case DECREASE_QTY_ITEM_CART: {\r\n      let index = state.items.findIndex(function (element) {\r\n        return element.id === action.item.id;\r\n      });\r\n      if (index === -1) {\r\n        return state;\r\n      } else {\r\n        const newState = { ...state };\r\n        if (newState.items[index].qty === 1) {\r\n          return state;\r\n        }\r\n        newState.items[index].qty--;\r\n        showNotification(\"Qty Decreased by 1\");\r\n        return newState;\r\n      }\r\n    }\r\n\r\n    // Delete item from cart\r\n    // case DELETE_PRODUCT:\r\n    case DELETE_ITEM_CART: {\r\n      const filteredItems = state.items.filter(function (element) {\r\n        return element.id !== action.item.id;\r\n      });\r\n      showNotification(\"Removed From Cart\");\r\n      return { ...state, items: filteredItems };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Combine reducers\r\nexport default combineReducers({\r\n  products,\r\n  cart,\r\n});\r\n","/** @format */\r\n\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport \"../../node_modules/noty/lib/noty.css\";\r\nimport \"../../node_modules/noty/lib/themes/sunset.css\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage, //use local storage\r\n};\r\n\r\n// Create a new reducer which can persist data within refreshes.\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default () => {\r\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\r\n  let persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyABSvow-OLgMLyhFz8uF3GrQ5svLssiI6Q\",\n  authDomain: \"cart-web-app-af0de.firebaseapp.com\",\n  projectId: \"cart-web-app-af0de\",\n  storageBucket: \"cart-web-app-af0de.appspot.com\",\n  messagingSenderId: \"810004559808\",\n  appId: \"1:810004559808:web:e39915c1bb0ecc2f6cfa25\",\n};\nfirebase.initializeApp(firebaseConfig);\n\n// Create store using the specs.\nconst createdStore = store();\n\n// Persist gate for redux persistance library which stores \"store\" in local storage.\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={createdStore.persistor}>\n      <Provider store={createdStore.store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}